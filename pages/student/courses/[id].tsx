import Head from "next/head";

import Navbar from "@/components/navbar";
import type { Course } from "@/types/schema";

import style from "@/styles/pages/course.module.scss";
import { GetServerSideProps, GetServerSidePropsContext, InferGetServerSidePropsType } from "next";
import { GetCourseData, GetCourseDataResponse } from "@/pages/api/course/course";

export const config = {
  runtime: "experimental-edge",
  regions: ["fra1"],
};

export const getServerSideProps: GetServerSideProps<GetCourseDataResponse> = async (context: GetServerSidePropsContext) => {
  const { id } = context.query;
  
  if (!id) { return { props: {
    professors: [],
    students: [],
    tests: [] }} 
  }

  const DBresponse = await GetCourseData({ courseid: id.toString() })

  return { props: {
    professors: DBresponse.professors,
    students: DBresponse.students,
    tests: DBresponse.tests
  }}
};

export default function Course(props: InferGetServerSidePropsType<typeof getServerSideProps>) {
  return (
    <>
      <Head>
        {/* this is actually the course's name. */}
        <title>Learnify - {props.professors[0].name}</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <Navbar />

        <div>
          {/* this is actually the course's name, professors is a merge between the Professors table and the Courses table. */}
          <span>{props.professors[0].name}</span>

          <span>made by: </span>
          {props.professors.map(professor => <>{professor.professor}</>)}

          <div>
            {props.tests.map(test => <>{test.name}</>)}
          </div>
        </div>
      </main>
    </>
  );
}
